{"version":3,"sources":["main.js"],"names":["mapboxgl","accessToken","map","Map","container","style","geocoder","MapboxGeocoder","country","bbox","addControl","on","addSource","type","data","features","addLayer","id","source","paint","test","t","undefined","properties","APN_8","lastGeocode","ev","result","center","toString","getUserData","coords","name","loaded","queryRenderedFeatures","window","innerWidth","innerHeight","layers","popup","Popup","setLngLat","geometry","coordinates","setHTML","text","addTo","setTimeout","getSource","setData","e","point","layer","description","lngLat","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,SAASC,WAAT,GACE,2FADF;AAEA,IAAIC,MAAM,IAAIF,SAASG,GAAb,CAAiB;AACzBC,aAAW,KADc;AAEzBC,SAAO;AAFkB,CAAjB,CAAV;AAIA,IAAIC,WAAW,IAAIC,cAAJ,CAAmB;AAChCN,eAAaD,SAASC,WADU;AAEhCO,WAAS,IAFuB;AAGhCC,QAAM,CAAC,CAAC,kBAAF,EACJ,iBADI,EACe,CAAC,kBADhB,EAEJ,iBAFI;AAH0B,CAAnB,CAAf;AAQAP,IAAIQ,UAAJ,CAAeJ,QAAf;AACAJ,IAAIS,EAAJ,CAAO,MAAP,EAAe,YAAW;AACxBT,MAAIU,SAAJ,CAAc,cAAd,EAA8B;AAC5BC,UAAM,SADsB;AAE5BC,UAAM;AACJD,YAAM,mBADF;AAEJE,gBAAU;AAFN;AAFsB,GAA9B;;AAQAb,MAAIc,QAAJ,CAAa;AACXC,QAAI,OADO;AAEXC,YAAQ,cAFG;AAGXL,UAAM,QAHK;AAIXM,WAAO;AACL,uBAAiB,EADZ;AAEL,sBAAgB;AAFX;AAJI,GAAb;AASD,CAlBD;AAmBA,SAASC,IAAT,CAAcC,CAAd,EAAiB;AACf,MAAIA,MAAMC,SAAV,EAAqB;AAClB,WAAO,kBAAP;AACF;AACD,SAAOD,EAAEE,UAAF,CAAaC,KAApB;AACD;;AAEDC,cAAc,EAAd;AACAnB,SAASK,EAAT,CAAY,QAAZ,EAAsB,UAASe,EAAT,EAAa;AACjC,MAAIA,GAAGC,MAAH,CAAUC,MAAV,CAAiBC,QAAjB,OAAgCJ,WAApC,EAAiD;AAAA,QAEtCK,WAFsC,GAE/C,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,IAA7B,EAAmC;AACjC,UAAI9B,IAAI+B,MAAJ,OAAiB,IAArB,EAA2B;AACzB,YAAIlB,WAAWb,IAAIgC,qBAAJ,CAA0B,CAACC,OAAOC,UAAP,GAAoB,CAArB,EAAwBD,OAAOE,WAAP,GAAqB,CAA7C,CAA1B,EAA2E;AACxFC,kBAAQ,CAAC,uBAAD;AADgF,SAA3E,CAAf;AAGA,YAAIC,QAAQ,IAAIvC,SAASwC,KAAb,GACTC,SADS,CACCf,GAAGC,MAAH,CAAUe,QAAV,CAAmBC,WADpB,EAETC,OAFS,UAEMlB,GAAGC,MAAH,CAAUkB,IAFhB,qBAEoCzB,KAAKL,SAAS,CAAT,CAAL,CAFpC,WAGT+B,KAHS,CAGH5C,GAHG,CAAZ;AAID,OARD,MAQO;AACL6C,mBAAWjB,WAAX,EAAwB,GAAxB;AACD;AACF,KAd8C;;AAC/C5B,QAAI8C,SAAJ,CAAc,cAAd,EAA8BC,OAA9B,CAAsCvB,GAAGC,MAAH,CAAUe,QAAhD;;AAcAZ;AACD;AACDL,gBAAcC,GAAGC,MAAH,CAAUC,MAAV,CAAiBC,QAAjB,EAAd;AACD,CAnBD;;AAsBA;AACA3B,IAAIS,EAAJ,CAAO,OAAP,EAAgB,UAASuC,CAAT,EAAY;AAC1B,MAAInC,WAAWb,IAAIgC,qBAAJ,CAA0BgB,EAAEC,KAA5B,CAAf;AACA,MAAIpC,SAAS,CAAT,EAAYqC,KAAZ,CAAkBnC,EAAlB,KAAyB,uBAA7B,EAAsD;AACpD,QAAIoC,cAAc,UAAUtC,SAAS,CAAT,EAAYQ,UAAZ,CAAuBC,KAAnD;AACA,QAAIxB,SAASwC,KAAb,GACGC,SADH,CACaS,EAAEI,MADf,EAEGV,OAFH,CAEWS,WAFX,EAGGP,KAHH,CAGS5C,GAHT;AAID,GAND,MAMO;AACLqD,YAAQC,GAAR,CAAY,YAAZ;AACD;AACF,CAXD","file":"bundle.map","sourcesContent":["mapboxgl.accessToken =\n  \"pk.eyJ1IjoiZWxnZWxibyIsImEiOiJjajRlNXB6dzQwc3FyMzJuaHMwaGo0bTVmIn0.1zglQ_bZTA-DsJ4PJkLAQw\";\nvar map = new mapboxgl.Map({\n  container: \"map\",\n  style: \"mapbox://styles/elgelbo/cjflz6ecx0fvf2soa5vbnxyyt\"\n});\nvar geocoder = new MapboxGeocoder({\n  accessToken: mapboxgl.accessToken,\n  country: 'US',\n  bbox: [-117.46582031249999,\n    32.37068286611427, -116.29302978515625,\n    33.26395335923739\n  ]\n});\nmap.addControl(geocoder);\nmap.on(\"load\", function() {\n  map.addSource(\"single-point\", {\n    type: \"geojson\",\n    data: {\n      type: \"FeatureCollection\",\n      features: []\n    }\n  });\n\n  map.addLayer({\n    id: \"point\",\n    source: \"single-point\",\n    type: \"circle\",\n    paint: {\n      \"circle-radius\": 10,\n      \"circle-color\": \"#007cbf\"\n    }\n  });\n});\nfunction test(t) {\n  if (t === undefined) {\n     return 'Undefined value!';\n  }\n  return t.properties.APN_8;\n}\n\nlastGeocode = \"\";\ngeocoder.on('result', function(ev) {\n  if (ev.result.center.toString() !== lastGeocode) {\n    map.getSource(\"single-point\").setData(ev.result.geometry);\n    function getUserData(coords, name) {\n      if (map.loaded() === true) {\n        var features = map.queryRenderedFeatures([window.innerWidth / 2, window.innerHeight / 2], {\n          layers: ['pclssouthsouth-3zrxor']\n        });\n        var popup = new mapboxgl.Popup()\n          .setLngLat(ev.result.geometry.coordinates)\n          .setHTML(`<h2>${ev.result.text}</h2><p>APN: ${test(features[0])}</p>`)\n          .addTo(map);\n      } else {\n        setTimeout(getUserData, 100);\n      }\n    }\n    getUserData();\n  }\n  lastGeocode = ev.result.center.toString();\n});\n\n\n// map.querySourceFeatures('pclssouthsouth-3zrxor')\nmap.on(\"click\", function(e) {\n  var features = map.queryRenderedFeatures(e.point);\n  if (features[0].layer.id === \"pclssouthsouth-3zrxor\") {\n    var description = \"APN: \" + features[0].properties.APN_8;\n    new mapboxgl.Popup()\n      .setLngLat(e.lngLat)\n      .setHTML(description)\n      .addTo(map);\n  } else {\n    console.log(\"not parcel\");\n  }\n});\n"]}